// Datos de la malla completa
const malla = {
  "I SEM": [
    { nombre: "Ciencias b치sicas para la salud", prereq: [] },
    { nombre: "Anatom칤a e histolog칤a", prereq: [] },
    { nombre: "Fundamentos de enfermer칤a", prereq: [] },
    { nombre: "Primeros auxilios", prereq: [] },
    { nombre: "Sociedad y cultura", prereq: [] },
    { nombre: "Desarrollo personal y autoliderazgo", prereq: [] },
    { nombre: "Antropolog칤a I PEG 1", prereq: [] }
  ],
  "II SEM": [
    { nombre: "Microbiolog칤a y parasitolog칤a", prereq: ["Ciencias b치sicas para la salud"] },
    { nombre: "Fisiolog칤a", prereq: ["Ciencias b치sicas para la salud"] },
    { nombre: "Proceso enfermero en el ciclo vital", prereq: ["Fundamentos de enfermer칤a"] },
    { nombre: "Educaci칩n para la salud I", prereq: [] },
    { nombre: "Antropolog칤a II", prereq: ["Antropolog칤a I PEG 1"] },
    { nombre: "Teolog칤a I PEG 2", prereq: [] },
    { nombre: "Oferta variable PEG 3", prereq: [] }
  ],
  "III SEM": [
    { nombre: "Fisiopatolog칤a", prereq: ["Fisiolog칤a"] },
    { nombre: "Farmacolog칤a", prereq: ["Microbiolog칤a y parasitolog칤a", "Fisiolog칤a"] },
    { nombre: "Cuidados de enfermer칤a I", prereq: ["Proceso enfermero en el ciclo vital"] },
    { nombre: "Educaci칩n para la salud II", prereq: ["Educaci칩n para la salud I"] },
    { nombre: "Relaci칩n de ayuda", prereq: [] },
    { nombre: "Bioestad칤stica", prereq: [] },
    { nombre: "Minor 1", prereq: [] }
  ],
  "IV SEM": [
    { nombre: "Cuidados de enfermer칤a II", prereq: ["Cuidados de enfermer칤a I"] },
    { nombre: "Introducci칩n a la enfermer칤a comunitaria", prereq: ["Educaci칩n para la salud II"] },
    { nombre: "Ingl칠s t칠cnico para salud", prereq: [] },
    { nombre: "Epidemiolog칤a y salud p칰blica", prereq: ["Bioestad칤stica"] },
    { nombre: "Minor 2", prereq: [] },
    { nombre: "Teolog칤a II PEG 4", prereq: [] }
  ],
  "V SEM": [
    { nombre: "Enfermer칤a cl칤nica del adulto y persona mayor", prereq: ["Cuidados de enfermer칤a II", "Farmacolog칤a", "Fisiopatolog칤a"] },
    { nombre: "Enfermer칤a en la comunidad I", prereq: ["Introducci칩n a la enfermer칤a comunitaria"] },
    { nombre: "Enfermer칤a y emprendimiento", prereq: [] },
    { nombre: "Metodolog칤a de la investigaci칩n", prereq: ["Bioestad칤stica"] },
    { nombre: "Minor 3", prereq: [] }
  ],
  "VI SEM": [
    { nombre: "Enfermer칤a de la mujer", prereq: ["Enfermer칤a cl칤nica del adulto y persona mayor"] },
    { nombre: "Enfermer칤a del ni침o y adolescente", prereq: ["Enfermer칤a cl칤nica del adulto y persona mayor"] },
    { nombre: "Enfermer칤a en la comunidad II", prereq: ["Enfermer칤a en la comunidad I"] },
    { nombre: "Pr치ctica basada en la evidencia", prereq: ["Metodolog칤a de la investigaci칩n"] },
    { nombre: "칄tica PEG 5", prereq: [] }
  ],
  "VII SEM": [
    { nombre: "Enfermer칤a gerontogeri치trica", prereq: ["Enfermer칤a cl칤nica del adulto y persona mayor"] },
    { nombre: "Cuidados de fin de la vida", prereq: ["Enfermer칤a cl칤nica del adulto y persona mayor"] },
    { nombre: "칄tica profesional aplicada", prereq: ["칄tica PEG 5"] },
    { nombre: "Gesti칩n y administraci칩n en salud", prereq: ["Pr치ctica basada en la evidencia"] },
    { nombre: "Oferta variable PEG 6", prereq: [] }
  ],
  "VIII SEM": [
    { nombre: "Enfermer칤a en situaciones de urgencia", prereq: ["Enfermer칤a cl칤nica del adulto y persona mayor"] },
    { nombre: "Enfermer칤a en salud mental y psiquiatr칤a", prereq: ["Pr치ctica basada en la evidencia"] },
    { nombre: "Liderazgo y gesti칩n de equipos de salud", prereq: ["Gesti칩n y administraci칩n en salud"] },
    { nombre: "Innovaci칩n", prereq: ["Pr치ctica basada en la evidencia"] },
    { nombre: "Seminario de investigaci칩n", prereq: ["Metodolog칤a de la investigaci칩n"] },
    { nombre: "Teolog칤a III PEG 7", prereq: [] },
    { nombre: "Oferta variable PEG 8", prereq: [] }
  ],
  "IX SEM": [
    { nombre: "Introducci칩n al ejercicio profesional de enfermer칤a", prereq: [] }
  ],
  "X SEM": [
    { nombre: "Internado profesional en el 치mbito hospitalario adulto/ni침o", prereq: ["Introducci칩n al ejercicio profesional de enfermer칤a"] },
    { nombre: "Internado profesional en el 치mbito comunitario", prereq: ["Introducci칩n al ejercicio profesional de enfermer칤a"] },
    { nombre: "Internado profesional en el 치mbito hospitalario cr칤tico", prereq: ["Introducci칩n al ejercicio profesional de enfermer칤a"] }
  ]
};

const container = document.getElementById('malla-container');
const mensaje = document.getElementById('mensaje');

const courseMap = new Map();
const dependentsMap = new Map();
let selectedCourses = new Set();

// Crear la interfaz
for (let semestre in malla) {
  const semDiv = document.createElement('div');
  semDiv.className = 'semestre';

  const title = document.createElement('h2');
  title.textContent = semestre;
  semDiv.appendChild(title);

  for (let curso of malla[semestre]) {
    const div = document.createElement('div');
    div.className = 'ramo';
    div.textContent = curso.nombre;
    div.dataset.nombre = curso.nombre;
    div.title = curso.prereq.length ? 'Prerrequisitos: ' + curso.prereq.join(', ') : 'Sin prerrequisitos';
    semDiv.appendChild(div);

    courseMap.set(curso.nombre, {
      element: div,
      prereq: curso.prereq,
      completed: false
    });
  }

  container.appendChild(semDiv);
}

// Mapa de dependientes
for (let [nombre, obj] of courseMap) {
  for (let pr of obj.prereq) {
    if (!dependentsMap.has(pr)) {
      dependentsMap.set(pr, []);
    }
    dependentsMap.get(pr).push(nombre);
  }
}

// Verificar si puede desbloquearse
function canUnlock(nombre) {
  const obj = courseMap.get(nombre);
  if (!obj) return false;
  for (let pr of obj.prereq) {
    const preObj = courseMap.get(pr);
    if (!preObj || !preObj.completed) return false;
  }
  return true;
}

// Actualizar estados visuales
function updateLocks() {
  for (let [nombre, obj] of courseMap) {
    const el = obj.element;
    el.classList.remove('locked', 'unlocked', 'completed', 'shake', 'selected');
    
    if (obj.completed) {
      el.classList.add('completed');
    } else if (canUnlock(nombre)) {
      el.classList.add('unlocked');
      if (selectedCourses.has(nombre)) {
        el.classList.add('selected');
      }
    } else {
      el.classList.add('locked');
    }
  }
}

// Mostrar mensaje
let msgTimeout = null;
function showMessage(text, duration) {
  clearTimeout(msgTimeout);
  mensaje.textContent = text;
  mensaje.classList.add('show');
  msgTimeout = setTimeout(() => {
    mensaje.classList.remove('show');
  }, duration || 3000);
}

// Eventos de clic
for (let [nombre, obj] of courseMap) {
  const el = obj.element;
  
  el.addEventListener('click', function(e) {
    // Desmarcar si ya est치 completado
    if (obj.completed) {
      const toUnmark = new Set();
      function dfs(u) {
        toUnmark.add(u);
        const deps = dependentsMap.get(u) || [];
        for (let d of deps) {
          dfs(d);
        }
      }
      dfs(nombre);
      for (let n of toUnmark) {
        courseMap.get(n).completed = false;
      }
      selectedCourses.clear();
      updateLocks();
      return;
    }

    // Verificar prerrequisitos
    if (!canUnlock(nombre)) {
      el.classList.add('shake');
      setTimeout(() => {
        el.classList.remove('shake');
      }, 360);
      showMessage('No puedes marcar este ramo: faltan prerrequisitos.', 2000);
      return;
    }

    // Selecci칩n m칰ltiple
    if (e.ctrlKey || e.metaKey) {
      if (selectedCourses.has(nombre)) {
        selectedCourses.delete(nombre);
      } else {
        selectedCourses.add(nombre);
      }
      updateLocks();
      
      if (selectedCourses.size > 0) {
        showMessage(selectedCourses.size + ' ramo' + (selectedCourses.size > 1 ? 's' : '') + ' seleccionado' + (selectedCourses.size > 1 ? 's' : '') + ' (Ctrl+clic para a침adir m치s)', 2000);
      }
      return;
    }

    // Marcar seleccionados
    if (selectedCourses.size > 0) {
      selectedCourses.add(nombre);
      let count = 0;
      for (let courseName of selectedCourses) {
        const courseObj = courseMap.get(courseName);
        if (courseObj && !courseObj.completed && canUnlock(courseName)) {
          courseObj.completed = true;
          count++;
        }
      }
      selectedCourses.clear();
      updateLocks();
      
      if (count > 0) {
        showMessage('춰Felicidades Antito, eres la mejor! 游눘 (' + count + ' ramo' + (count > 1 ? 's' : '') + ' completado' + (count > 1 ? 's' : '') + ')', 3500);
      }
      return;
    }

    // Marcar solo este
    obj.completed = true;
    updateLocks();
    showMessage('춰Felicidades Antito, eres la mejor! 游눘', 3000);
  });
}

// Inicializar
updateLocks()
